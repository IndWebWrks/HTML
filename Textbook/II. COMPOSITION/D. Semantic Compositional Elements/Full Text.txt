This work is licensed under the 
Creative Commons 
Attribution-NonCommercial-ShareAlike 4.0 
International License. 

To view a copy of this license, visit 
http://creativecommons.org/licenses/by-nc-sa/4.0/.



D. Semantic Compositional Elements
		1. Contact Information -- <address>
		2. Stress
			a. Emphasis -- <em>
			b. strong -- <strong>
			c. Highlighting -- <mark>
		3. Technical
			a. input -- <kbd>
			b. inline code -- <code>
			c. block code -- <pre>
			d. output -- <samp>
		4. math/science
			a. variables -- <var>
			b. Superscripts -- <sup>
			c. Subscripts -- <sub>
			d. mathml -- <math>
		5. Fine Print -- <small>
		6. Generic Elements
			a. bold -- <b>
			b. italic -- <i>
			c. underline -- <u>
			d. strike through -- <s>


Semantic Compositional Elements
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Up to this point in our study of html we have investigated the html elements 
that are the more general structural elements of composition; paragraphs, 
headings, list, and tables for example.  We've seen html primarily used to 
express the blocks that, put together, become a document, the structure of a 
particular web page.

We are now going investigate the html elements that are more situational.  
Instead of building the blocks of a document the html elements we are about to 
study are attempting to semantically represent situations where content is to 
be emphised, or is a quote, or an abbreviation.  These situational html 
elements are seeking to describe more nuanced than say a paragraph element.

{{  intro rich text  }}


Contact Information
===================
In formal documents authors often add conact information give readers a means 
for follow up questions or additional information.  A wide variety ways to 
communicate with any person; phone, email, social web sites, postal services, 
fax, the list seems to grow longer every day.  The <address> block type element 
represents a section of content that instructs readers the how establish 
communication.  The <address> element is not limited to communication with the 
author, although its most common usage.  A biographical article may include 
ways of contacting the subject of the article.

There really is no template to follow for using the <address> element. Consider 
the <address> element as a sectioning element, so having nested block type 
elements is common.  If the contact information is more of a list of multiple 
ways of communication should all be nested in one <address> element instead of 
an <address> element for each way listed.  Here are a few examples.


<address>
	<p>Way to contact your senator:</p>	
	<div>(555) 555-5555</div>
	<div>mysenator@senate.gov</div>
</address>


<address>
	<p>Send your order form to:</p>	
	<div>123 Main St.</div>
	<div>Big City, TX 12345</div>
</address>


Default Style
-------------
font-style:italic;


Tag Profile
-----------
block; text-inline-block:{connot nest another <address>}; global;


Stress
======
In the content of a document its not uncommon to have it contain words that are 
of more importance, or may need to be stressed to clarify the meaning of a 
sentence.


The <em> Element
----------------
In speech a speaker can bend the meaning of a sentence by speaking louder, 
emphasizing, a particular word.  Let's choose a sentence to illustrate the 
point.  As you read the sentence have the voice in your head emphasize the 
the text nested in <em> elements.  Our sample sentence will be:

    She jumped in the river.

As simple sentence stating a simple fact.  Now let's emphasize different words 
and see if they bend the meaning our our sentence.

    <em>She</em> jumped in the river.

After reading this a sense accusation that she, not anyone else, jumped in the 
river.  Let's move our emphasis to a different word.

    She <em>jumped</em> in the river.

Now the sentence seems to clarify how she ended up in the river.  She wasn't 
pushed, she didn't fall, she jumped in to the river.  Let's try one more:

    She jumped in the <em>river</em>.

The question now seems to be clarifying what she jumped into.  It wasn't a lake 
or a swimming pool, she jumped into a river.

The <em> element provides an emphasizing voice to content.  The <em> element is 
an inline type element, that italicizes any nested text, and represents 
emphasized content.

Italicized fonts are used because the are more subtle than a boldface font.  
Expressing emphasis should be subtle, overuse loses it's subtle nature.  Not 
every sententce needs words emphasized.  Use the <em> element sparingly, as it 
is utilized it quickly loses it's purpose and becomes a disraction.


Default Style
`````````````
font-style:italic;


Tag Profile
```````````
inline; text-inline; globals;


The <strong> Element
--------------------
In some circumstances, typically technical content, having the ability to scan 
a page and find important terms is important.  Boldfaced content is very 
noticable, especially if it's used sparingly.  The <strong> element represents 
terms or phrases intented to be noticed while scanning the page.  The <strong> 
element is an inline type that represent words of phrases of strong 
importantance.  The <strong> element will boldface any nested text.

Even more care of overuse is needed for the <strong> element than is needed for 
the <em> element.  Boldfaced text really standout, farmore than italicized 
text.  Use the <strong> element sparingly.


Default Style
`````````````
font-weight:bolder;


Tag Profile
```````````
inline; text-inline; globals;	 '


The <mark> Element
------------------
A newer way to html of stressing text in a document is the <mark> element.  A 
common practice of readers, using a marker, to highlight important phrases for
referencing in the future. The effect of highlighting is changing the 
background, behind the text to a bright color.  The <mark> element is an inline 
type that represents highlighted text.  Here is a general example:

    <p><mark>Lorem ipsum dolor sit amet, consectetur adipiscing elit</mark>. Nam 
	placerat metus a rhoncus vestibulum. Curabitur eget mi est. Curabitur mollis 
	justo vitae mi consequat, at scelerisque mi viverra. Vivamus euismod placerat 
	odio, ut  sollicitudin turpis pellentesque in. Suspendisse tempor volutpat 
	orci a pulvinar.</p>

Will be displayed by a browser as:

    <mark>Lorem ipsum dolor sit amet, consectetur adipiscing elit</mark>. Nam 
	placerat metus a rhoncus vestibulum. Curabitur eget mi est. Curabitur mollis 
	justo vitae mi consequat, at scelerisque mi viverra. Vivamus euismod placerat 
	odio, ut  sollicitudin turpis pellentesque in. Suspendisse tempor volutpat 
	orci a pulvinar.


Default Style
`````````````
background-color:yellow;


Tag Profile
```````````
inline; text-inline; globals;


Technical Content
=================
It should come to no suprise, due to the fact that html is a computer related, 
topic, that html provides the semantic means for expressing computer related 
content.  Computer related content tends to fall into one of three categories:  
the input from user interaction, the computer processes of an application 
typically expressed as computer code, and the output from an application to a
user.


Computer Input
--------------
Some of the ways a user interacts with an application are a keyboard, mouse, 
game control, touchscreen; the list grows as time advances.  In the early 
1990's there was really only one device, the keyboard; the mouse was becoming 
popular but no means the universal desktop device it has become.  The html 
element for expressing user input is the <kbd> element, an abbreviation for 
keyboard.  On the surface this may seem to limit the use of the <kbd> element 
only keyboard concerning content.  The <kbd> element was added to html very 
early on, as mentioned, when keyboards were really the only universal way for 
user input.  

Instead of adding new elements, such as <mouse>, for new types of user input, 
the html standand expanded the meaning of the <kbd> element to include any type 
of user input; be it mouse, touchscreen, etc.  That means use the <kbd> element 
to represent any type of user input, regardless that the element name is an 
abbreviation of keyboard.


Default Style
`````````````
font-family: monospace; 

 
Tag Profile
```````````
inline; text-inline; global;


Computer Code
-------------
A helpful way of explaining how an application processes user input and 
application output is to display the code that handles the processing; we've 
seen illustrations of code through out this text as html examples.  The 
<code> inline type element represents computer code.

<p>The <code>code</code> element represents a fragment of computer code.</p>

<p>When you call the <code>activate()</code> method on the <code>robotSnowman</code> 
object, the eyes glow.</p>


Code Block
``````````
    <pre>
    <code>emptyNode(nodeType) {
        let objRef = {contentID:1, name:'blank document', tagName:nodeType};
        return this.toNode(objRef);
    },

    emptyNodeList(typeName) {
        let dd = document.createElement('dd');
        dd.dataset.type = typeName;
        return dd;
    },</code>
    </pre>

The <pre> element is a block type, so the element itself will cause a line 
break before and after it's nested content.  The <pre> element also adds a 1em 
space before and after the line breaks.  By default nested text has a monospace 
font type. Remember, a line break imediately following the <pre> open tag will 
be ignored.


Default Style
`````````````
font-family:monospace;


Tag Profile
```````````
inline; text-inline; global;


Computer Output -- <samp>
---------------
All that's left is is computational output; the reply to user input and 
determined by the application code.  Here are a few examples:


Sample Block
````````````


Default Style
`````````````
font-family:monospace;


Tag Profile
```````````
inline; text-inline; global;


Comprehensive Examples
----------------------

<kbd> in <samp>:	input echoed by the system.
<samp> in <kbd>:	input based on system output.
<kbd> in <kbd>:		actual key or other single unit of input as appropriate for the input mechanism.


	<pre><samp><span class="prompt">jdoe@mowmow:~$</span> <kbd>ssh demo.example.com</kbd>
	Last login: Tue Apr 12 09:10:17 2005 from mowmow.example.com on pts/1
	Linux demo 2.6.10-grsec+gg3+e+fhs6b+nfs+gr0501+++p3+c4a+gr2b-reslog-v6.189 #1 SMP Tue 
	Feb 1 11:22:36 PST 2005 i686 unknown

	<span class="prompt">jdoe@demo:~$</span> <span class="cursor">_</span></samp></pre>

In this second example, the user is told to pick a particular menu item. The outer kbd element 
marks up a block of input, with the inner kbd elements representing each individual step of the 
input, and the samp elements inside them indicating that the steps are input based on something 
being displayed by the system, in this case menu labels:

	<p>To make George eat an apple, select
	    <kbd>
			<kbd><samp>File</samp></kbd>|<kbd><samp>Eat Apple...</samp></kbd>
		</kbd>
	</p>

Such precision isn’t necessary; the following is equally fine:

	<p>To make George eat an apple, select <kbd>File | Eat Apple...</kbd></p>


Here the kbd element is used to indicate keys to press:

	<p>To make George eat an apple, press <kbd><kbd>Shift</kbd>+<kbd>F3</kbd></kbd></p>


Math and Science Content
========================
Math and science content uses unique formating expressions.  For instance four  
squared is expressed by the digit 4 and a 2 digit which is smaller and appears 
the right and higher than the 4 digit. Squared numbers is a simple expression 
compared to how expressive mathematical equations can get. Because mathematical 
expression is complicated, using html quickly falls flat; there are only three 
elements to use.  

The W3C has strategically kept mathematical representation out of html.  An 
effective mathematical representation in html would overtake the document 
nature html was intended to be.  Instead of adding mathematical representation 
to html, W3C created a mathematical representation language, separate from html 
but share the tag syntax; meaning since you already know the html syntax rules, 
you already know how to use the mathematical representational language.  The 
name this language is mathml.  

We must overcome the powerful tempation to divert attention away from html and 
to mathml.  We will limit our investigation to the three elements provided by 
html that are conducive math and science content.  We will also see how to 
embed mathml into an html document.


Variables
---------
Terms are often used to express a variable.  The <var> element represents 
variable terms.  Any nested content will be italicized.

Default Style
`````````````
font-style:italic;

Tag Profile
```````````
inline; text-inline; globals;


Superscripts
------------
Earlier we described how four squared is expressed in mathematics: by the digit 
4 and a 2 digit which is smaller and appears the right and higher than the 4 
digit. The term for the format of the 2 is superscript.  Superscripts can be 
represented with the <sup> inline type element. So four squared can be 
expressed utilizing the <sup> element:

    4<sup>2</sup>

Here we display Pythagorean theorem as another, more complex, example:

  <div>
      <var>a</var><sup>2</sup> + <var>b</var><sup>2</sup> = <var>c</var><sup>2</sup>
  </div>

The variables in the equation are a, b, and c.  The squared values, 
<sup>2</sup>, are constants.


Default Style
`````````````
vertical-align:super; line-height:normal; font-size:smaller;

Tag Profile
```````````
inline; text-inline; globals;


Subscripts -- <sub>
----------
Subscripts are similar to superscripts, they are smaller font characters that 
appear lower than the character to the left to which it shares a relation.  For 
example, water being two hydrogen atoms and an oxygen atom, are expressed in 
chemistry as H2O.  The 2 in H2O is a supscript, expressing that there are two 
hydrogen atoms.

Subscripts are represented by the <sub> inline type element. So water can be 
represented utilizing the <sub> element as such:

    H<sub>2</sub>O

Default Style
`````````````
vertical-align:sub; line-height:normal; font-size:smaller;

Tag Profile
```````````
inline; text-inline; globals;


mathml -- <math>
------
Earlier we explained that mathml, as sibling of html can be used inside an html 
document. 


    <html>
    <head>...</head>
    
    <body>
    <p>Planck's Law</p>
    
    <math display='block' xmlns='http://www.w3.org/1998/Math/MathML'>
       <mrow>
          <mi>E</mi><mo>=</mo>

          <mfrac>
             <mrow>
                <mn>2</mn><mi>&pi;</mi><mi>h</mi><msup><mi>c</mi><mn>2</mn></msup>
             </mrow>
    
             <mrow>
                <msup><mi>&lambda;</mi><mn>5</mn></msup>
    
                <mrow>
                   <mo>(</mo>

                   <mrow>
                      <msup>
                         <mi>e</mi>
						 
                         <mrow>
                            <mi>h</mi><mi>c</mi><mo>&ndash;</mo><mi>&lambda;</mi><msub>
                            <mi>k</mi><mi>b</mi></msub><mi>T</mi>
                          </mrow>
                       </msup>
					   
                       <mo>&ndash;</mo><mn>1</mn>
                    </mrow>
					
                    <mo>)</mo>
                 </mrow>
              </mrow>
           </mfrac>
        </mrow>
    </math>
    
    </body>
    </html>


Fine Print -- <small>
==========

Generic Elements

bold -- <b>

italic -- <i>

underline -- <u>

strike through -- <s>

